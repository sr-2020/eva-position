{
    "openapi": "3.0.0",
    "info": {
        "title": "EVA API",
        "contact": {
            "email": "gurkalov.dev@gmail.com"
        },
        "version": "0.0.2"
    },
    "servers": [
        {
            "url": "http://position.evarun.ru"
        }
    ],
    "paths": {
        "/api/v1/beacons": {
            "get": {
                "tags": [
                    "Beacon"
                ],
                "description": "Returns all beacons",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "maximum number of results to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": "100"
                        },
                        "example": "10"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Beacon response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Beacon"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Beacon bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Beacon"
                ],
                "description": "Creates a new beacon.",
                "operationId": "createBeacon",
                "requestBody": {
                    "description": "Beacon to add.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewBeacon"
                            },
                            "example": {
                                "label": "room1",
                                "ssid": "beacon1",
                                "bssid": "c0:0a:95:9d:00:0c"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Beacon response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Beacon"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/beacons/{id}": {
            "get": {
                "tags": [
                    "Beacon"
                ],
                "description": "Returns a beacon based on a single ID",
                "operationId": "getBeacon",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of beacon to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "default": "1"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Beacon response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Beacon"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Beacon bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Beacon"
                ],
                "description": "Update a beacon based on a single ID.",
                "operationId": "updateBeacon",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of beacon to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "default": "1"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Beacon to update.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewBeacon"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Beacon response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Beacon"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Beacon"
                ],
                "description": "Deletes a single beacon based on the ID.",
                "operationId": "deleteBeacon",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of beacon to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "default": 2
                        },
                        "example": 2
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Beacon deleted"
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/locations": {
            "get": {
                "tags": [
                    "Location"
                ],
                "description": "Returns all locations",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "maximum number of results to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": "100"
                        },
                        "example": "10"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Location response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Location"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Location bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Location"
                ],
                "description": "Creates a new location.",
                "operationId": "createLocation",
                "requestBody": {
                    "description": "Location to add.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewLocation"
                            },
                            "example": {
                                "label": "room1",
                                "ssid": "location1",
                                "bssid": "c0:0a:95:9d:00:0c"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Location response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Location"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/locations/{id}": {
            "get": {
                "tags": [
                    "Location"
                ],
                "description": "Returns a location based on a single ID",
                "operationId": "getLocation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of location to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "default": "1"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Location response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Location"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Location bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Location"
                ],
                "description": "Update a location based on a single ID.",
                "operationId": "updateLocation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of location to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "default": "1"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Location to update.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewLocation"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Location response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Location"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Location"
                ],
                "description": "Deletes a single location based on the ID.",
                "operationId": "deleteLocation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of location to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "default": 2
                        },
                        "example": 2
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Location deleted"
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/paths": {
            "get": {
                "tags": [
                    "Path"
                ],
                "description": "Returns all paths",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "maximum number of results to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": "100"
                        },
                        "example": "10"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Path response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Path"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Path bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/positions": {
            "get": {
                "tags": [
                    "Position"
                ],
                "description": "Returns all positions",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "maximum number of results to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": "10"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Position response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Position"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Position bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Position"
                ],
                "description": "Creates a new position.",
                "operationId": "createPosition",
                "requestBody": {
                    "description": "Position to add.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewPosition"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Position response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Position"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "TkRVem4yTERSQTNQRHFxcmo4SUozNWZp"
                        ]
                    }
                ]
            }
        },
        "/api/v1/positions/{id}": {
            "get": {
                "tags": [
                    "Position"
                ],
                "description": "Returns a position based on a single ID",
                "operationId": "getPosition",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of position to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Position response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Position"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Position bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/users": {
            "get": {
                "tags": [
                    "User"
                ],
                "description": "Returns all users",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "maximum number of results to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": "10"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "User bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/users/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "description": "Returns a user based on a single ID",
                "operationId": "getUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of user to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "User bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "NewBeacon": {
                "required": [
                    "bssid"
                ],
                "properties": {
                    "label": {
                        "type": "string",
                        "format": "string",
                        "default": "Hall Room",
                        "example": "Hall Room"
                    },
                    "ssid": {
                        "type": "string",
                        "format": "string",
                        "default": "hall2",
                        "example": "hall2"
                    },
                    "bssid": {
                        "type": "string",
                        "format": "string",
                        "default": "c0:0a:95:9d:00:0c",
                        "example": "c0:0a:95:9d:00:0c"
                    }
                },
                "type": "object"
            },
            "BeaconSignal": {
                "required": [
                    "ssid",
                    "bssid",
                    "level"
                ],
                "properties": {
                    "ssid": {
                        "type": "string",
                        "format": "string",
                        "example": "beacon1"
                    },
                    "bssid": {
                        "type": "string",
                        "format": "string",
                        "example": "b0:0a:95:9d:00:0a"
                    },
                    "level": {
                        "type": "integer",
                        "format": "int64",
                        "example": -50
                    }
                },
                "type": "object"
            },
            "Beacon": {
                "required": [
                    "id",
                    "bssid"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "label": {
                        "type": "string",
                        "format": "string",
                        "example": "Hall Room"
                    },
                    "ssid": {
                        "type": "string",
                        "format": "string",
                        "example": "beacon1"
                    },
                    "bssid": {
                        "type": "string",
                        "format": "string",
                        "example": "b0:0a:95:9d:00:0a"
                    }
                },
                "type": "object"
            },
            "ErrorModel": {
                "required": [
                    "code",
                    "message"
                ],
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "NewLocation": {
                "required": [
                    "label"
                ],
                "properties": {
                    "label": {
                        "type": "string",
                        "format": "string",
                        "default": "Hall Room",
                        "example": "Hall Room"
                    }
                },
                "type": "object"
            },
            "Location": {
                "required": [
                    "id",
                    "label"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "label": {
                        "type": "string",
                        "format": "string",
                        "example": "Hall Room"
                    }
                },
                "type": "object"
            },
            "NewPath": {
                "required": [
                    "user_id"
                ],
                "properties": {
                    "user_id": {
                        "type": "integer",
                        "format": "int64",
                        "default": 1,
                        "example": 1
                    },
                    "location_id": {
                        "type": "integer",
                        "format": "int64",
                        "default": 1,
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Path": {
                "required": [
                    "id",
                    "user_id"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "default": 1,
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "format": "int64",
                        "default": 1,
                        "example": 1
                    },
                    "location_id": {
                        "type": "integer",
                        "format": "int64",
                        "default": 1,
                        "example": 1
                    },
                    "location": {
                        "type": "object",
                        "format": "object",
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Location"
                            },
                            {
                                "nullable": true
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "NewPosition": {
                "required": [
                    "name"
                ],
                "properties": {
                    "beacons": {
                        "type": "array",
                        "format": "array",
                        "items": {
                            "$ref": "#/components/schemas/BeaconSignal"
                        }
                    }
                },
                "type": "object"
            },
            "Position": {
                "required": [
                    "id",
                    "user_id"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "string",
                        "example": "2019-01-26 20:00:57"
                    },
                    "beacons": {
                        "type": "array",
                        "format": "array",
                        "items": {
                            "$ref": "#/components/schemas/BeaconSignal"
                        },
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "PositionBeacon": {
                "required": [
                    "id",
                    "position_id"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "position_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "beacon_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "bssid": {
                        "type": "string",
                        "format": "string",
                        "example": "b0:0a:95:9d:00:0a"
                    },
                    "level": {
                        "type": "integer",
                        "format": "int64",
                        "example": -50
                    }
                },
                "type": "object"
            },
            "LoginCreds": {
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "string",
                        "example": "test@email.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "string",
                        "example": "secret"
                    }
                },
                "type": "object"
            },
            "RegisterCreds": {
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "string",
                        "example": "test@email.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "string",
                        "example": "secret"
                    },
                    "name": {
                        "type": "string",
                        "format": "string",
                        "example": "Tom Sand"
                    }
                },
                "type": "object"
            },
            "UserApiKey": {
                "required": [
                    "id",
                    "api_key"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "api_key": {
                        "type": "string",
                        "format": "string",
                        "example": "em1JbEVqSnZlR0lPMlozenZ5YmpPUWdKSURiVGpnZmg="
                    }
                },
                "type": "object"
            },
            "User": {
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "admin": {
                        "type": "boolean",
                        "format": "boolean",
                        "example": false
                    },
                    "location_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1,
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "format": "string",
                        "example": "User Name"
                    },
                    "status": {
                        "type": "string",
                        "format": "string",
                        "example": "thebest"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "string",
                        "example": "2019-01-26 20:00:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "string",
                        "example": "2019-01-26 20:00:57"
                    },
                    "location_updated_at": {
                        "type": "string",
                        "format": "string",
                        "example": "2019-01-26 20:00:57"
                    },
                    "location": {
                        "type": "object",
                        "format": "object",
                        "nullable": true,
                        "$ref": "#/components/schemas/Location"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "name": "Authorization",
                "in": "header",
                "scheme": "bearer"
            }
        }
    }
}